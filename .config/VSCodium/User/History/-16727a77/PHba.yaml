objstoreConfig: "thanos-config"

auth:
  basicAuthUsers:
    shield: N8ZXC5te5qFtgTeptfQ3iQSyccLt04Sc

query:
  dnsDiscovery:
    enabled: true
    sidecarsService: "kube-prometheus-stack-thanos-discovery"
    sidecarsNamespace: "kube-prometheus-stack"
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi

queryFrontend:
  resources:
    requests:
      cpu: 100m
      memory: 128Mi
    limits:
      cpu: 200m
      memory: 256Mi
  ingress:
    enabled: true
    hostname: thanos.monicore.publicplan.cloud
    ingressClassName: "nginx"
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt
    tls: true

bucketweb:
  enabled: true
  resources:
    requests:
      cpu: 50m
      memory: 64Mi
    limits:
      cpu: 100m
      memory: 128Mi

compactor:
  enabled: true
  retentionResolutionRaw: 30d
  retentionResolution5m: 90d
  retentionResolution1h: 1y
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi

storegateway:
  enabled: true
  resources:
    requests:
      cpu: 250m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi

receive:
  enabled: true
  resources:
    requests:
      cpu: 500m
      memory: 2Gi
    limits:
      cpu: 1
      memory: 8Gi
  ingress:
    enabled: true
    hostname: thanos-receive.monicore.publicplan.cloud
    ingressClassName: "nginx"
    # annotations:
    #   cert-manager.io/cluster-issuer: letsencrypt-prod
    #   nginx.ingress.kubernetes.io/auth-type: basic
    #   nginx.ingress.kubernetes.io/auth-secret: thanos-receive-basic-auth
    #   nginx.ingress.kubernetes.io/auth-realm: "Authentication Required"
    tls: true

metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: "kube-prometheus-stack"
