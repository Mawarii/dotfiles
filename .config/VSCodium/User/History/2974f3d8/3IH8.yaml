---
- name: Run debug tasks
  hosts: all
  gather_facts: false
  become: true
  tasks:
    - name: Detect Kubernetes versions
      block:
        - name: Detect running Kubernetes version
          ansible.builtin.shell:
            cmd: dpkg-query -W -f='${Version}' kubeadm
          changed_when: false
          failed_when: false
          register: kube_version_running_out

        - name: Detect latest Kubernetes version
          ansible.builtin.shell: |
            set -o pipefail
            apt-cache madison kubeadm | grep -F {{ kubernetes_version }} | head -1 | awk '{print $3}'
          args:
            executable: /bin/bash
          changed_when: false
          register: kube_version_latest_out

        - name: Set Kubernetes version variables
          ansible.builtin.set_fact:
            kube_version_running: "{{ kube_version_running_out.stdout | default('0.0.0-0.0', true) }}"
            kube_version_latest: "{{ kube_version_latest_out.stdout | default('0.0.0-0.0', true) }}"

        - name: Print versions
          ansible.builtin.debug:
            msg:
              - "Running: {{ kube_version_running }}"
              - "Latest: {{ kube_version_latest }}"

    - name: Detect CRI-O versions
      block:
        - name: Detect running CRI-O version
          ansible.builtin.shell:
            cmd: dpkg-query -W -f='${Version}' cri-o
          changed_when: false
          failed_when: false
          register: crio_version_running_out

        - name: Detect latest CRI-O version
          ansible.builtin.shell: |
            set -o pipefail
            apt-cache madison cri-o | grep -F {{ crio_version }} | head -1 | awk '{print $3}'
          args:
            executable: /bin/bash
          changed_when: false
          register: crio_version_latest_out

        - name: Set CRI-O version variables
          ansible.builtin.set_fact:
            crio_version_running: "{{ crio_version_running_out.stdout | default('0.0.0-0.0', true) }}"
            crio_version_latest: "{{ crio_version_latest_out.stdout | default('0.0.0-0.0', true) }}"

        - name: Print versions
          ansible.builtin.debug:
            msg:
              - "Running: {{ crio_version_running }}"
              - "Latest: {{ crio_version_latest }}"

    - name: Test version compare
      ansible.builtin.debug:
        msg: "{{ auto_upgrades and kube_version_running is version_compare(kube_version_latest, '<') }}"
