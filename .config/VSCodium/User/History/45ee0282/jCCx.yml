# take care to update the image-tags everywhere
.image-tags: &image-tags
  - "-sid"
  - "-bookworm"

# defines the database and image versions to test against
.test-variables: &service-reference
  - IMAGE: mongo:6.0.1
    DB_TYPE: mongodb
    DB_PORT: 27017
    DB_HOST: mongo
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: mariadb:11.3.2
    DB_TYPE: mariadb
    DB_PORT: 3306
    DB_HOST: mariadb
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: mariadb:10.11.4
    DB_TYPE: mariadb
    DB_PORT: 3306
    DB_HOST: mariadb
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: mysql:8.4
    DB_TYPE: mysql
    DB_PORT: 3306
    DB_HOST: mysql
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: mysql:5.7
    DB_TYPE: mysql
    DB_PORT: 3306
    DB_HOST: mysql
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: postgres:16
    DB_TYPE: postgres
    DB_PORT: 5432
    DB_HOST: pg
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: postgres:15
    DB_TYPE: postgres
    DB_PORT: 5432
    DB_HOST: pg
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: postgres:14
    DB_TYPE: postgres
    DB_PORT: 5432
    DB_HOST: pg
    IMAGE_TAG_SUFFIX: *image-tags
  - IMAGE: postgres:13
    DB_TYPE: postgres
    DB_PORT: 5432
    DB_HOST: pg
    IMAGE_TAG_SUFFIX: *image-tags

.test-services: &test-services
  # image name taken from parallel:matrix config
  - name: ${IMAGE}
    alias: pg
    variables:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: root
      POSTGRES_DB: db
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
      MARIADB_ROOT_PASSWORD: password
  - name: minio/minio
    alias: minio
    variables:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    entrypoint:
      - sh
      - -c
      - |
        while [ ! -f "/builds/${CI_PROJECT_PATH}/container/init-script.sh" ]; do
          sleep 2
        done
        chmod +x /builds/${CI_PROJECT_PATH}/container/init-script.sh
        /builds/${CI_PROJECT_PATH}/container/init-script.sh

# builds the containers with an test tag, to use in the later tests
build-test:
  stage: test
  allow_failure: true
  except:
    - main
    - master
    - tags
  parallel:
    matrix:
      - IMAGE_TAG_SUFFIX: *image-tags
  image:
    name: gcr.io/kaniko-project/executor:v1.9.0-debug
    entrypoint: [""]
  before_script:
    - sed -i "s/!!TAG!!/test/g" ${CI_PROJECT_DIR}/sources/common
  script:
    - /kaniko/executor
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/container/Containerfile${IMAGE_TAG_SUFFIX}"
      --destination "${CI_REGISTRY_IMAGE}:test${IMAGE_TAG_SUFFIX}"

# tests all the image and backup combinations
test:
  stage: test
  allow_failure: true
  needs:
    - build-test
  except:
    - main
    - master
    - tags
  services: *test-services
  image: ${CI_REGISTRY_IMAGE}:test${IMAGE_TAG_SUFFIX}
  parallel:
    matrix: *service-reference
  variables:
    CLUSTER_STAGE_S3_URL_PROTOCOL: "http"
    CLUSTER_STAGE_S3_URL: "minio:9000"
    CLUSTER_STAGE_NAME: local
    DB_USER: root
    DB_PASSWORD: "password"
    CLUSTER_STAGE_S3_ACCESS_KEY: "minioadmin"
    CLUSTER_STAGE_S3_SECRET_KEY: "minioadmin"
    CLUSTER_STAGE_S3_BUCKET_NAME_BACKUP: "nageh"
  script: 
   - sh -c "sleep 10 && /usr/local/bin/backup-job.sh"
  # used to only run one job at a time
  resource_group: "DB_TEST_${CI_PROJECT_NAME}"
