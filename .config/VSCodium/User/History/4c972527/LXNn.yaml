services:
  backup:
    build:
      context: .
      dockerfile: ./container/Containerfile-sid
    image: localhost/backup
    environment:
      CLUSTER_STAGE_S3_URL_PROTOCOL: "http"
      CLUSTER_STAGE_S3_URL: "minio:9000"
      CLUSTER_STAGE_NAME: local
      DB_TYPE: "mongodb"
      DB_HOST: "mongo"
      DB_USER: root
      DB_PORT: 27017
      DB_PASSWORD: "example"
      #DEBUG: "true"
      CLUSTER_STAGE_S3_ACCESS_KEY: "minioadmin"
      CLUSTER_STAGE_S3_SECRET_KEY: "minioadmin"
      CLUSTER_STAGE_S3_BUCKET_NAME_BACKUP: "nageh"
      # YES_I_DONT_NEED_BACKUPS_AND_DOCUMENTED_THIS_SOMEWHERE: "UNDERSTOOD"
      ENABLE_RETENTION: "true"
      RETENTION_DAYS: "0"
      BACKUP_ENVIRONMENT: "generic-local"
      LOCAL_BACKUP_PATH: "/home/tools/backup"
    restart: no
    entrypoint: ["sh", "-c", "sleep 2 && /usr/local/bin/backup-job.sh"]
    depends_on:
      - minio
      - mongo

  minio:
    image: minio/minio
    volumes:
      - "./container/init-script.sh:/init-script.sh:ro"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
    entrypoint: sh /init-script.sh 
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  mongo:
    image: bitnami/mongodb:7.0
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
      MONGODB_ROOT_USER: root
      MONGODB_ROOT_PASSWORD: example
