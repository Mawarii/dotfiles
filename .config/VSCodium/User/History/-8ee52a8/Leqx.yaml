kind: Deployment
apiVersion: apps/v1
metadata:
  name: domibus
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: domibus
  template:
    metadata:
      labels:
        k8s-app: domibus
    spec:
      securityContext:
        fsGroup: 1000
        fsGroupChangePolicy: "OnRootMismatch"
      # initContainers:
      #   - command: ["sh", "-c", "cp -r /data/* /copydata"]
      #     image: DOCKER_IMAGE_1
      #     imagePullPolicy: IfNotPresent
      #     name: datacopy
      #     securityContext:
      #       allowPrivilegeEscalation: false
      #       capabilities:
      #         drop: ["ALL"]
      #       seccompProfile:
      #         type: RuntimeDefault
      #       readOnlyRootFilesystem: true
      #       runAsNonRoot: true
      #       runAsUser: 1000
      #       runAsGroup: 1000
      #     volumeMounts:
      #       - mountPath: /copydata
      #         name: data
      containers:
      - name: domibus
        image: DOCKER_IMAGE_1
        ports:
        - containerPort: 8080
          name: http
          protocol: TCP
        securityContext:
          runAsUser: 1000
          runAsGroup: 1000
          runAsNonRoot: true
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: false
          capabilities:
            drop: ["ALL"]
          seccompProfile:
            type: RuntimeDefault
        resources:
          requests:
            cpu: 500m
            memory: 256Mi
          limits:
            cpu: 1000m
            memory: 2Gi
        env:
          - name: LOGGER_LEVEL_ORG_APACHE_CXF
            value: DEBUG
          - name: DB_TYPE
            value: MySQL
          - name: DB_HOST
            value: "domibus-mysql"
          - name: DB_PORT
            value: "3306"
          - name: DB_NAME
            valueFrom:
              secretKeyRef:
                name: domibus-mysql
                key: MYSQL_DATABASE
          - name: DB_USER
            valueFrom:
              secretKeyRef:
                name: domibus-mysql
                key: MYSQL_USER
          - name: DB_PASS
            valueFrom:
              secretKeyRef:
                name: domibus-mysql
                key: mysql-password
        volumeMounts:
          - name: domibus-config-volume
            mountPath: /data/tomcat/conf/domibus
          - name: domibus-config
            mountPath: '/data/tomcat/conf/domibus/logback.xml'
            subPath: 'logback.xml'
#            fixme: fallback to normal truststore not working
#          - name: domibus-config-clientauthentication
#            mountPath: /data/tomcat/conf/domibus/clientauthentication.xml
#            subPath: 'clientauthentication.xml'
          - name: passwd
            mountPath: /etc/squid
          # - name: domibus-config-volume
          #   mountPath: /data
          - name: home
            mountPath: /home/edelivery
          - name: tmp
            mountPath: /tmp
      # - name: version-sidecar
      #   image: DOCKER_IMAGE_2
      #   readinessProbe:
      #     httpGet:
      #       path: /
      #       port: 3000
      #     initialDelaySeconds: 5
      #     timeoutSeconds: 1
      #     periodSeconds: 15
      #   livenessProbe:
      #     httpGet:
      #       path: /health
      #       port: 3000
      #     initialDelaySeconds: 15
      #     timeoutSeconds: 1
      #     periodSeconds: 15
      #   ports:
      #     - containerPort: 3000
      #   securityContext:
      #     runAsUser: 1000
      #     runAsGroup: 1000
      #     allowPrivilegeEscalation: false
      #     readOnlyRootFilesystem: true
      #     runAsNonRoot: true
      #     capabilities:
      #       drop: ["ALL"]
      #     seccompProfile:
      #       type: RuntimeDefault
      #   envFrom:
      #     - secretRef:
      #         name: cluster-stage-vars
      #   resources:
      #     limits:
      #       memory: "128Mi"
      #       cpu: "100m"
      #     requests:
      #       memory: "64Mi"
      volumes:
      - name: domibus-config-volume
        persistentVolumeClaim:
          claimName: domibus-config-pvc
      - name: domibus-config
        configMap:
          name: domibus-config
      # - name: domibus-config-clientauthentication
      #   configMap:
      #     name: domibus-config-clientauthentication
      - name: passwd
        emptyDir: {}
      # - name: data
      #   emptyDir: {}
      - name: home
        emptyDir: {}
      - name: tmp
        emptyDir: {}
      imagePullSecrets:
        - name: gitlab-registry
