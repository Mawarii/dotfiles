apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-generic-oauth
data:
  grafana.ini: |-
    #################################### Server ####################################
    [server]
    # Protocol (http, https, h2, socket)
    protocol = https
    # The public facing domain name used to access grafana from a browser
    domain = localhost
    # The full public facing url you use in browser, used for redirects and emails
    # If you use reverse proxy and sub path specify full url (with sub path)
    ;root_url = %(protocol)s://%(domain)s:%(http_port)s/

    # Serve Grafana from subpath specified in `root_url` setting. By default it is set to `false` for compatibility reasons.
    ;serve_from_sub_path = false

    # Log web requests
    ;router_logging = false

    # the path relative working path
    ;static_root_path = public

    # enable gzip
    ;enable_gzip = false

    # https certs & key file
    ;cert_file =
    ;cert_key =

    # Certificates file watch interval
    ;certs_watch_interval =

    # Unix socket gid
    # Changing the gid of a file without privileges requires that the target group is in the group of the process and that the process is the file owner
    # It is recommended to set the gid as http server user gid
    # Not set when the value is -1
    ;socket_gid =

    # Unix socket mode
    ;socket_mode =

    # Unix socket path
    ;socket =

    # CDN Url
    ;cdn_url =

    # Sets the maximum time using a duration format (5s/5m/5ms) before timing out read of an incoming request and closing idle connections.
    # `0` means there is no timeout for reading the request.
    ;read_timeout = 0

    # This setting enables you to specify additional headers that the server adds to HTTP(S) responses.
    [server.custom_response_headers]
    #exampleHeader1 = exampleValue1
    #exampleHeader2 = exampleValue2
    [auth.generic_oauth]
    enabled = true
    name = Keycloak
    allow_sign_up = true
    client_id = grafana-wsp
    client_secret = K1lukk599gGZqpJfkXnJCY2Jr6PWSKOb
    scopes = openid email profile offline_access roles
    email_attribute_path = email
    login_attribute_path = username
    name_attribute_path = full_name
    auth_url = https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/auth
    token_url = https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/token
    api_url = https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/userinfo
    role_attribute_path: contains(resource_access."grafana-clops".roles[*], 'admin') && 'Admin' || contains(resource_access."grafana-clops".roles[*], 'editor') && 'Editor' || 'Viewer'
    allow_assign_grafana_admin = true
