---
- name: Install required packages
  ansible.builtin.apt:
    pkg:
      - vim
      - fail2ban
      - rsyslog
      - kubelet
      - kubeadm
      - kubectl
      - cri-o
    state: present
    update_cache: true

- name: Detect Kubernetes versions
  block:
    - name: Detect running Kubernetes version
      ansible.builtin.shell:
        cmd: dpkg-query -W -f='${Version}' kubeadm
      changed_when: false
      register: kube_version_running_out

    - name: Detect latest Kubernetes version
      ansible.builtin.shell: |
        set -o pipefail
        apt-cache madison kubeadm | grep -F {{ kubernetes_version }} | head -1 | awk '{print $3}'
      args:
        executable: /bin/bash
      changed_when: false
      register: kube_version_latest_out

    - name: Set Kubernetes version variables
      ansible.builtin.set_fact:
        kube_version_running: "{{ kube_version_running_out.stdout | default('0.0.0-0.0', true) }}"
        kube_version_latest: "{{ kube_version_latest_out.stdout | default('0.0.0-0.0', true) }}"

- name: Detect CRI-O versions
  block:
    - name: Detect running CRI-O version
      ansible.builtin.shell:
        cmd: dpkg-query -W -f='${Version}' cri-o
      changed_when: false
      register: crio_version_running_out

    - name: Detect latest CRI-O version
      ansible.builtin.shell: |
        set -o pipefail
        apt-cache madison cri-o | grep -F {{ crio_version }} | head -1 | awk '{print $3}'
      args:
        executable: /bin/bash
      changed_when: false
      register: crio_version_latest_out

    - name: Set CRI-O version variables
      ansible.builtin.set_fact:
        crio_version_running: "{{ crio_version_running_out.stdout | default('0.0.0-0.0', true) }}"
        crio_version_latest: "{{ crio_version_latest_out.stdout | default('0.0.0-0.0', true) }}"

- name: Update Kubernetes packages
  when: "auto_upgrades and kube_version_running is version_compare(kube_version_latest, '<')"
  ansible.builtin.apt:
    pkg:
      - kubelet={{ kube_version_latest.stdout }}
      - kubeadm={{ kube_version_latest.stdout }}
      - kubectl={{ kube_version_latest.stdout }}
    state: present
    update_cache: true
    allow_change_held_packages: true

- name: Hold Kubernetes packages
  block:
    - name: Holding kubeadm package
      ansible.builtin.dpkg_selections:
        name: kubeadm
        selection: hold

    - name: Holding kubelet package
      ansible.builtin.dpkg_selections:
        name: kubelet
        selection: hold

    - name: Holding kubectl package
      ansible.builtin.dpkg_selections:
        name: kubectl
        selection: hold

    - name: Holding cri-o package
      ansible.builtin.dpkg_selections:
        name: cri-o
        selection: hold

- name: Update all packages to their latest version
  ansible.builtin.apt:
    name: "*"
    state: latest
    update_cache: true

- name: Remove dependencies that are no longer required
  ansible.builtin.apt:
    autoremove: true

- name: Check if reboot is required
  ansible.builtin.stat:
    path: /var/run/reboot-required
  register: reboot_required_file
