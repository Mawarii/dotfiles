---
- name: Ensure {{ installation_path }}/{{ folder.redash }} directory exists
  ansible.builtin.file:
    path: "{{ installation_path }}/{{ folder.redash }}"
    state: directory

- name: Check whether .env already exists so that the passwords are not overwritten
  ansible.builtin.stat:
    path: "{{ installation_path }}/{{ folder.redash }}/.env"
  register: stat_res

- name: Generate redash .env file if it does not exist
  ansible.builtin.template:
    src: "./redash/redash.env.j2"
    dest: "{{ installation_path }}/{{ folder.redash }}/.env"
  when: not stat_res.stat.exists

- name: Generate redash compose file
  ansible.builtin.template:
    src: "./redash/redash-compose.yaml.j2"
    dest: "{{ installation_path }}/{{ folder.redash }}/compose.yaml"

- name: Create database tables for redash
  ansible.builtin.command: "docker compose -f {{ installation_path }}/{{ folder.redash }}/compose.yaml run --rm server create_db"
  when: not stat_res.stat.exists

- name: Create admin user for redash
  ansible.builtin.command: "docker compose -f {{ installation_path }}/{{ folder.redash }}/compose.yaml run --rm server ./manage.py users create_root {{ redash_admin_email }} admin2 --password changeme --org {{ redash_organization }}"
  when: not stat_res.stat.exists

- name: Fix organization slug
  community.docker.docker_container_exec:
    container: "{{ folder.redash }}-postgres-1"
    command: "psql -U {{ redash.database.username }} -d {{ redash.database.database }} -c \"UPDATE organizations SET slug = 'default' WHERE slug = '{{ redash_organization }}';\""
    chdir: /root
  when: not stat_res.stat.exists

- name:
  ansible.builtin.command: "docker compose -f {{ installation_path }}/{{ folder.redash }}/compose.yaml run --rm postgres PGPASSWORD={{ redash_database_password }} "

- name: Create and start redash services
  community.docker.docker_compose_v2:
    project_src: "{{ installation_path }}/{{ folder.redash }}"

# psql -U your_username -d your_database -c "UPDATE organizations SET slug = 'default' WHERE slug = 'kekse';"

# get redash_api_key
