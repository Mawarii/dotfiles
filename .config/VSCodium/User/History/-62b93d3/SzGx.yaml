apiVersion: apps/v1
kind: Deployment
metadata:
  name: govforms2-workflow-core
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: govforms2-workflow-core
  template:
    metadata:
      labels:
        k8s-app: govforms2-workflow-core
    spec:
      initContainers:
        - name: minio-create-bucket
          image: DOCKER_IMAGE_3
          command:
            - "sh"
            - "-c"
            - |
              mc config host add myminio ${MINIO_SERVER_URL} ${MINIO_SERVER_ACCESS_KEY} ${MINIO_SERVER_SECRET_KEY};
              until mc ping -x myminio; do sleep 5; echo 'waiting for connection'; done;
              mc mb --ignore-existing myminio/formio;
              mc ilm add --expiry-days "${MINIO_BUCKET_EXPIRY_DAYS}" myminio/formio;
              mc policy download myminio/formio;
          env:
            - name: MINIO_SERVER_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-auth
                  key: root-user
            - name: MINIO_SERVER_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: minio-auth
                  key: root-password
            - name: MINIO_PORT
              value: "9000"
            - name: MINIO_HOSTNAME
              value: "minio-service.govforms2-workflow-core.svc"
            - name: MINIO_SERVER_URL
              value: "http://$(MINIO_HOSTNAME):$(MINIO_PORT)"
            - name: MINIO_BUCKET_EXPIRY_DAYS
              value: "180"
          envFrom:
            - secretRef:
                name: govforms2-workflow-core-secrets
            - configMapRef:
                name: govforms2-workflow-core-configmap
          securityContext:
            runAsUser: 1001
            runAsGroup: 1001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: minio-config
              mountPath: /.mc
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"
            requests:
              memory: "64Mi"
              cpu: "100m"
        - name: copy-public-files
          image: DOCKER_IMAGE_1
          command: [ "sh", "-c", "cp -r /srv/app/public/* /copydata" ]
          volumeMounts:
            - name: public
              mountPath: /copydata
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"
            requests:
              memory: "64Mi"
              cpu: "100m"
        - name: database-migrate
          image: DOCKER_IMAGE_1
          command:
            - "sh"
            - "-c"
            - |
              php bin/console doctrine:database:create -n --if-not-exists -k api --connection antrag
              php bin/console doctrine:database:create -n --if-not-exists -k api --connection user
              php bin/console doctrine:database:create -n --if-not-exists -k api --connection form
              php bin/console doctrine:migrations:migrate --all-or-nothing --allow-no-migration -n -q -k api --configuration 'context/api/config/packages/migrations/antrag.yaml'
              php bin/console doctrine:migrations:migrate --all-or-nothing --allow-no-migration -n -q -k api --configuration 'context/api/config/packages/migrations/user.yaml'
              php bin/console doctrine:migrations:migrate --all-or-nothing --allow-no-migration -n -q -k api --configuration 'context/api/config/packages/migrations/form.yaml'
          env:
            - name: DATABASE_PW
              valueFrom:
                secretKeyRef:
                  name: mariadb-auth
                  key: mariadb-password
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: mariadb-auth
                  key: mariadb-user
            - name: DATABASE_URL_ANTRAG
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/antrag?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_FORM
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/form?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_USER
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/user?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_WORKFLOW
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/workflow?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_FITCONNECT
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/fitconnect?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: APP_ENV
              value: "prod"
            - name: APP_CONTEXT
              value: "api"
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: symfony-logs
              mountPath: /srv/app/var/log
            - name: cache
              mountPath: /srv/app/var/cache
            - name: public
              mountPath: /srv/app/public
          resources:
            limits:
              memory: "1024Mi"
              cpu: "1"
            requests:
              memory: "64Mi"
              cpu: "100m"
      containers:
        - name: application
          image: DOCKER_IMAGE_1
          env:
            - name: DATABASE_PW
              valueFrom:
                secretKeyRef:
                  name: mariadb-auth
                  key: mariadb-password
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: mariadb-auth
                  key: mariadb-user
            - name: DATABASE_URL_ANTRAG
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/antrag?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_USER
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/user?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_FORM
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/form?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_WORKFLOW
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/workflow?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: DATABASE_URL_FITCONNECT
              value: "mysql://mariadb:$(DATABASE_PW)@mariadb.govforms2-workflow-core.svc:3306/fitconnect?serverVersion=mariadb-10.11.2&charset=utf8"
            - name: REDIS_PW
              valueFrom:
                secretKeyRef:
                  key: redis-password
                  name: redis-standalone
            - name: REDIS_URL
              value: "redis://default:$(REDIS_PW)@redis-standalone-master.govforms2-workflow-core.svc:6379"
            - name: REDIS_TTL
              value: "1800"
            - name: MINIO_ROOT_USER
              valueFrom:
                secretKeyRef:
                  name: minio-auth
                  key: root-user
            - name: MINIO_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: minio-auth
                  key: root-password
            - name: MINIO_ENDPOINT
              value: "http://minio-service.govforms2-workflow-core.svc:9000"
            - name: CLAMAV_HOST
              value: "tcp://clamav-service.clamav.svc:3310"
          readinessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "(echo 'quit' ) | telnet localhost 9000 > /dev/null 2>&1 && exit 0 || exit 1"
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
          livenessProbe:
            exec:
              command:
                - "sh"
                - "-c"
                - "(echo 'quit' ) | telnet localhost 9000 > /dev/null 2>&1 && exit 0 || exit 1"
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
          ports:
            - containerPort: 9000
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: symfony-logs
              mountPath: /srv/app/var/log
            - name: cache
              mountPath: /srv/app/var/cache
            - name: public
              mountPath: /srv/app/public
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"
            requests:
              memory: "64Mi"
              cpu: "100m"
        - name: nginx
          image: DOCKER_IMAGE_2
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          volumeMounts:
            - name: nginx-logs
              mountPath: /var/log/nginx
            - name: tmp
              mountPath: /tmp
            - name: public
              mountPath: /srv/app/public
            - name: nginx-conf
              mountPath: /etc/nginx/conf.d/default.conf
              subPath: nginx.conf
          ports:
            - containerPort: 80
          resources:
            limits:
              memory: "512Mi"
              cpu: "1"
            requests:
              memory: "64Mi"
              cpu: "100m"
        - name: kosit-validator
          image: DOCKER_IMAGE_4
          readinessProbe:
            httpGet:
              path: /health
              port: 8090
            initialDelaySeconds: 15
            periodSeconds: 30
          livenessProbe:
            httpGet:
              path: /health
              port: 8090
            initialDelaySeconds: 15
            periodSeconds: 30
          ports:
            - containerPort: 8090
          securityContext:
            runAsUser: 10001
            runAsGroup: 10001
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          resources:
            limits:
              memory: "2048Mi"
              cpu: "1"
            requests:
              memory: "64Mi"
              cpu: "100m"
        - name: version-sidecar
          image: DOCKER_IMAGE_5
          readinessProbe:
            httpGet:
              path: /
              port: 3030
            initialDelaySeconds: 5
            timeoutSeconds: 1
            periodSeconds: 15
          livenessProbe:
            httpGet:
              path: /health
              port: 3030
            initialDelaySeconds: 15
            timeoutSeconds: 1
            periodSeconds: 15
          ports:
            - containerPort: 3030
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            capabilities:
              drop: ["ALL"]
            seccompProfile:
              type: RuntimeDefault
          env:
            - name: PORT
              value: "3030"
          envFrom:
            - secretRef:
                name: cluster-stage-vars
          resources:
            limits:
              memory: "128Mi"
              cpu: "100m"
            requests:
              memory: "64Mi"
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsUser: 10001
      volumes:
        - name: symfony-logs
          emptyDir: { }
        - name: nginx-logs
          emptyDir: { }
        - name: tmp
          emptyDir: { }
        - name: cache
          emptyDir: { }
        - name: public
          emptyDir: { }
        - name: minio-config
          emptyDir: { }
        - name: nginx-conf
          configMap:
            name: govforms2-workflow-core-nginx-configmap
