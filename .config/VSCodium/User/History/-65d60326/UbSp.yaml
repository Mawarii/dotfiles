apiVersion: apps/v1
kind: Deployment
metadata:
  name: caddyserver
spec:
  replicas: 1
  selector:
    matchLabels:
      kubernetes.io/app: caddyserver
  template:
    metadata:
      labels:
        kubernetes.io/app: caddyserver
    spec:
      initContainers:
        - name: init-wg-config
          image: alpine
          command: ["/bin/sh", "-c"]
          args:
            - |
              echo "[Interface]
              Address = 10.7.0.4/24
              DNS = 1.1.1.1, 1.0.0.1
              PrivateKey = $WG_PRIVATE_KEY

              [Peer]
              PublicKey = gks95UySt4HaNytVcLSD4UiksrAlooqD0kv8bA+PBls=
              PresharedKey = $WG_PRESHARED_KEY
              AllowedIPs = 0.0.0.0/0
              Endpoint = 85.215.153.121:51820
              PersistentKeepalive = 25" > /tmp/wg.conf && chmod 600 /tmp/wg.conf
          env:
            - name: WG_PRIVATE_KEY
              valueFrom:
                secretKeyRef:
                  name: caddyserver-wireguard-secret
                  key: private-key
            - name: WG_PRESHARED_KEY
              valueFrom:
                secretKeyRef:
                  name: caddyserver-wireguard-secret
                  key: preshared-key
          volumeMounts:
            - name: wg-confs
              mountPath: /tmp
      containers:
        - name: wireguard
          image: linuxserver/wireguard:1.0.20210914
          securityContext:
            privileged: true
            capabilities:
              add: ["NET_ADMIN"]
          env:
          - name: PUID
            value: "1000"
          - name: PGID
            value: "1000"
          - name: TZ
            value: "Europe/Berlin"
          volumeMounts:
          - name: wg-confs
            mountPath: /config/wg_confs
        - name: caddyserver
          image: ghcr.io/slothcroissant/caddy-cloudflaredns:v2.8.1
          ports:
            - containerPort: 80
            - containerPort: 443
          volumeMounts:
            - mountPath: /etc/caddy/Caddyfile
              name: caddyfile
              subPath: Caddyfile
            - mountPath: /data
              name: data
            - mountPath: /config
              name: config
      volumes:
        - name: wg-confs
          emptyDir: {}
        - name: caddyfile
          configMap:
            name: caddyfile
        - name: data
          persistentVolumeClaim:
            claimName: caddy-data
        - name: config
          persistentVolumeClaim:
            claimName: caddy-config
