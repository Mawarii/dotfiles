adminUser: admin
adminPassword: eix0phohgoo0leephaenee1Deughey9she4phaju4wueMugh

envRenderSecret:
  KEYCLOAK_CLIENT_ID: grafana-efa-develop
  KEYCLOAK_CLIENT_SECRET: qfZlkJTQRm5u8npaA0PJCeKaflH6Bgjb

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        url: http://efacluster-loki-gateway
        access: proxy
        # isDefault: true
        jsonData:
          timeout: 60
          maxLines: 1000
          httpHeaderName1: "X-Scope-OrgID"
        secureJsonData:
          httpHeaderValue1: "grafana"
        editable: true
      - name: Prometheus
        type: prometheus
        url: http://prometheus-operated.prometheus:9090
        access: proxy
        isDefault: true
    # deleteDatasources:
    # - name: Prometheus

grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: true
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  server:
    domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"
    root_url: "https://{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"
  users:
    auto_assign_org_role: None
  auth:
    disable_login_form: true
  auth.generic_oauth:
    enabled: true
    name: Keycloak
    allow_sign_up: true
    client_id: ${KEYCLOAK_CLIENT_ID}
    client_secret: ${KEYCLOAK_CLIENT_SECRET}
    scopes: openid email profile offline_access roles
    email_attribute_path: email
    login_attribute_path: username
    name_attribute_path: full_name
    auth_url: https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/auth
    token_url: https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/token
    api_url: https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/userinfo
    role_attribute_path: contains(groups[*], 'admin') && 'Admin' || contains(groups[*], '*-write') && 'Editor' || contains(groups[*], '*-read') && 'Viewer' || ''
    allow_assign_grafana_admin: true

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
  ingressClassName: nginx
  hosts:
    - grafana.dev.efa.publicplan.cloud
  tls:
    - secretName: grafana-dev-efa-publicplan-cloud
      hosts:
        - grafana.dev.efa.publicplan.cloud

sidecar:
  dashboards:
    enabled: true
