---
- name: Detect Kubernetes versions
  block:
    - name: Detect running kubeadm version
      ansible.builtin.shell:
        cmd: dpkg-query -W -f='${Version}' kubeadm
      changed_when: false
      register: kubeadm_version_running_out

    - name: Detect latest kubeadm version
      ansible.builtin.shell: |
        set -o pipefail
        apt-cache madison kubeadm | grep -F {{ kubernetes_version }} | head -1 | awk '{print $3}'
      args:
        executable: /bin/bash
      changed_when: false
      register: kubeadm_version_latest_out

    - name: Detect running kubelet version
      ansible.builtin.shell:
        cmd: dpkg-query -W -f='${Version}' kubelet
      changed_when: false
      register: kubelet_version_running_out

    - name: Detect latest kubelet version
      ansible.builtin.shell: |
        set -o pipefail
        apt-cache madison kubelet | grep -F {{ kubernetes_version }} | head -1 | awk '{print $3}'
      args:
        executable: /bin/bash
      changed_when: false
      register: kubelet_version_latest_out

    - name: Detect running kubectl version
      ansible.builtin.shell:
        cmd: dpkg-query -W -f='${Version}' kubectl
      changed_when: false
      register: kubectl_version_running_out

    - name: Detect latest kubectl version
      ansible.builtin.shell: |
        set -o pipefail
        apt-cache madison kubectl | grep -F {{ kubernetes_version }} | head -1 | awk '{print $3}'
      args:
        executable: /bin/bash
      changed_when: false
      register: kubectl_version_latest_out

    - name: Set Kubernetes version variables
      ansible.builtin.set_fact:
        kube_version_running: "{{ kubeadm_version_running_out.stdout | default('0.0.0-0.0', true) }}"
        kube_version_latest: "{{ kubeadm_version_latest_out.stdout | default('0.0.0-0.0', true) }}"

    - name: Set Kubernetes upgrade variable
      ansible.builtin.set_fact:
        kube_upgrade_needed: "{{ kube_version_running is version_compare(kube_version_latest, '<') }}"

- name: Detect CRI-O versions
  block:
    - name: Detect running CRI-O version
      ansible.builtin.shell:
        cmd: dpkg-query -W -f='${Version}' cri-o
      changed_when: false
      register: crio_version_running_out

    - name: Detect latest CRI-O version
      ansible.builtin.shell: |
        set -o pipefail
        apt-cache madison cri-o | grep -F {{ crio_version }} | head -1 | awk '{print $3}'
      args:
        executable: /bin/bash
      changed_when: false
      register: crio_version_latest_out

    - name: Set CRI-O version variables
      ansible.builtin.set_fact:
        crio_version_running: "{{ crio_version_running_out.stdout | default('0.0.0-0.0', true) }}"
        crio_version_latest: "{{ crio_version_latest_out.stdout | default('0.0.0-0.0', true) }}"

    - name: Set CRI-O upgrade variable
      ansible.builtin.set_fact:
        crio_upgrade_needed: "{{ crio_version_running is version_compare(crio_version_latest, '<') }}"
