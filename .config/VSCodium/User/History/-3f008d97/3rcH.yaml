securityContext:
  container:
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 10001
    runAsGroup: 10001

resources:
  limits:
    cpu: 1
    memory: 2Gi
  requests:
    cpu: 256m
    memory: 500Mi

workload:
  main:
    podSpec:
      containers:
        main:
          env:
            NC_PUBLIC_URL: "https://ga-nocodb.dev.efa.publicplan.cloud"

credentials:
  # mys3:
  #   type: s3
  #   url: "https://hel1.your-objectstorage.com"
  #   bucket: "efa-develop-cloudnative-pg"
  #   accessKey:
  #     name: cluster-stage-vars
  #     key: CLUSTER_STAGE_S3_ACCESS_KEY
  #   secretKey:
  #     name: cluster-stage-vars
  #     key: CLUSTER_STAGE_S3_SECRET_KEY
  #   encrKey: "myencryptionkey"

ingress:
  main:
    enabled: true
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
    ingressClassName: "nginx"
    middlewares: null
    hosts:
      - host: ga-nocodb.dev.efa.publicplan.cloud
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: ga-nocodb-dev-efa-publicplan-cloud-tls
        hosts:
          - ga-nocodb.dev.efa.publicplan.cloud

postgres16Image:
  # repository: ghcr.io/cloudnative-pg/postgresql
  repository: docker.io/publicplan/cloudnative-pg
  tag: "16.8-pgvector"
  pullPolicy: IfNotPresent

cnpg:
  main:
    enabled: true
    type: postgres
    pgVersion: 16
    mode: replica
    database: "ga-database"
    user: "ga-user"
    # password: "PLACEHOLDERPASSWORD"
    cluster:
      postgresUID: 10001
      postgresGID: 10001
      description: "gruendungsassistent cloud-native postgres with pgvector"
      instances: 2
      primaryUpdateStrategy: unsupervised
      postgresql:
      initdb:
        database: ga-database
        owner: ga-user
        postInitApplicationSQL:
          - CREATE EXTENSION vector;
      startDelay: 300
      stopDelay: 300
      storage:
        size: 1G
    monitoring:
      enablePodMonitor: true
    backups:
      enabled: false
      destinationPath: "s3://efa-develop-cloudnative-pg/gruendungsassistent"
      scheduledBackups:
        - name: daily-backup
          schedule: "0 0 0 * * *"
          backupOwnerReference: self
          immediate: true
          suspend: false
      retentionPolicy: "30d"
    creds: {}
