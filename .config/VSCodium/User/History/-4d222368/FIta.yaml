---
- name: Add firewall rules for public communication
  hetzner.hcloud.firewall:
    api_token: "{{ hcloud_token }}"
    name: "k8s_public"
    rules:
      - port: "{{ ssh_port }}"
        protocol: tcp
        direction: in
        source_ips:
          - 0.0.0.0/0
      - port: 30080
        protocol: tcp
        direction: in
        source_ips:
          - 0.0.0.0/0
      - port: 30443
        protocol: tcp
        direction: in
        source_ips:
          - 0.0.0.0/0
      - port: 6443
        protocol: tcp
        direction: in
        source_ips:
          - 0.0.0.0/0
    state: present

- name: Apply public firewall to all cluster machines
  hetzner.hcloud.firewall_resource:
    api_token: "{{ hcloud_token }}"
    firewall: "k8s_public"
    label_selectors:
      - vm-type=controlplane
      - vm-type=worker
    state: present

- name: Gather all server IPs
  hetzner.hcloud.server_info:
    api_token: "{{ hcloud_token }}"
  register: output

- name: Add firewall rules for internal communication
  hetzner.hcloud.firewall:
    api_token: "{{ hcloud_token }}"
    name: "k8s_internal"
    rules:
      - port: 1-65535
        protocol: tcp
        direction: in
        source_ips:
          - "{{ item }}"
      - port: 1-65535
        protocol: udp
        direction: in
        source_ips: >-
          {{
            output.hcloud_server_info
            | community.general.json_query('[*].ipv4_address')
            | product(['32'])
            | map('join', '/')
            | list + ['172.16.0.0/12', '10.0.0.0/8']
          }}
    state: present
  loop: "{{ output.hcloud_server_info | community.general.json_query('[*].ipv4_address') + ['172.16.0.0/12', '10.0.0.0/8'] }}"

- name: Apply internal firewall to all cluster machines
  hetzner.hcloud.firewall_resource:
    api_token: "{{ hcloud_token }}"
    firewall: "k8s_internal"
    label_selectors:
      - vm-type=controlplane
      - vm-type=worker
    state: present
