adminUser: admin
adminPassword: w7yfUTilNEqoHyqxhc8uHFlgdIxZ4h8W

# envRenderSecret:
#   KEYCLOAK_CLIENT_ID: grafana-efa-develop
#   KEYCLOAK_CLIENT_SECRET: <redacted>

datasources:
  datasources.yaml:
    apiVersion: 1
    datasources:
      - name: Loki
        type: loki
        url: http://monicore-loki-gateway.loki
        access: proxy
        jsonData:
          timeout: 60
          maxLines: 1000
          httpHeaderName1: "X-Scope-OrgID"
        secureJsonData:
          httpHeaderValue1: "grafana"
        editable: true
      - name: Thanos
        type: prometheus
        url: http://monicore-thanos-query.thanos:9090
        access: direct
        isDefault: true
        # basicAuth: true
        # basicAuthUser: shield
        # basicAuthPassword: N8ZXC5te5qFtgTeptfQ3iQSyccLt04Sc

grafana.ini:
  paths:
    data: /var/lib/grafana/
    logs: /var/log/grafana
    plugins: /var/lib/grafana/plugins
    provisioning: /etc/grafana/provisioning
  analytics:
    check_for_updates: false
  log:
    mode: console
  grafana_net:
    url: https://grafana.net
  server:
    domain: "{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"
    root_url: "https://{{ if (and .Values.ingress.enabled .Values.ingress.hosts) }}{{ tpl (.Values.ingress.hosts | first) . }}{{ else }}''{{ end }}"
  # users:
  #   auto_assign_org_role: None
  # auth:
  #   disable_login_form: true
  # auth.generic_oauth:
  #   enabled: true
  #   name: Keycloak
  #   allow_sign_up: true
  #   client_id: ${KEYCLOAK_CLIENT_ID}
  #   client_secret: ${KEYCLOAK_CLIENT_SECRET}
  #   scopes: openid email profile offline_access roles
  #   email_attribute_path: email
  #   login_attribute_path: username
  #   name_attribute_path: full_name
  #   auth_url: https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/auth
  #   token_url: https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/token
  #   api_url: https://keycloak.live.publicplan.cloud/auth/realms/master/protocol/openid-connect/userinfo
  #   role_attribute_path: contains(groups[*], 'admin') && 'Admin' || contains(groups[*], 'efa-develop-write') && 'Editor' || contains(groups[*], 'efa-develop-read') && 'Viewer' || ''
  #   allow_assign_grafana_admin: true

ingress:
  enabled: true
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt
  ingressClassName: nginx
  hosts:
    - grafana.monicore.publicplan.cloud
  tls:
    - secretName: grafana-monicore-publicplan-cloud
      hosts:
        - grafana.monicore.publicplan.cloud

sidecar:
  dashboards:
    enabled: true
